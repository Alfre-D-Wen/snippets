{
	// Place your snippets for verilog here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Header-0": {
		"prefix": "header_Company",
		"body": [
			"//////////////////////////////////////////////////////////////////////////////////",
			"// Company: Concemed",
			"// Engineer: Alfred Wen",
			"//",
			"// Create Date: $CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
			"// Design Name: $TM_FILENAME",
			"// Module Name: ",
			"// Project Name: ",
			"// Target Devices: xcku060-ffva1156-2-i / xc7a35tcsg325-1",
			"// Tool Versions: Vivado 2021.1",
			"// Description:",
			"//",
			"// Dependencies:",
			"//",
			"// Revision:",
			"// Revision 0.01 - File Created",
			"// Additional Comments:",
			"//",
			"//////////////////////////////////////////////////////////////////////////////////"
		],
		"description": "Company Header"
	},
	"Header-1": {
		"prefix": "Header_Personal",
		"body": [
			"//***********************************************************************//",
			"//*  File           : $TM_FILENAME                                         ",
			"//*  Module Name    :                                                      ",
			"//*  Revision       :                                                      ",
			"//*  Model          :                                                      ",
			"//*                                                                        ",
			"//*  Description    :                                                      ",
			"//*                                                                        ",
			"//*                                                                        ",
			"//*                                                                        ",
			"//*  Designer       : Alfred Wen                                           ",
			"//*  Create Date    : $CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
			"//*  Rev        Author        Date        Modification                     ",
			"//*  ---       ---------    ---------     ---------------                  ",
			"//*                                                                        ",
			"//*                                                                        ",
			"//*************************************************************************//"
		],
		"description": "Personal Header"
	},
	"Comment-0": {
		"prefix": "Description_Function",
		"body": [
			"//***************************************************************************",
			"// Description",
			"//***************************************************************************"
		],
		"description": "Description of Function"
	},
	"Comment-1": {
		"prefix": "Description_Signal",
		"body": [
			"//--------------------------------------------------------------------------//",
			"// Description",
			"//--------------------------------------------------------------------------//"
		],
		"description": "Description of group signals"
	},
	"Comment-2": {
		"prefix": "Description_Instantiation",
		"body": [
			"//***************************************************************************",
			"// Instantiation",
			"//***************************************************************************"
		],
		"description": "Description of Instantiation"
	},
	"Module-0": {
		"prefix": "MyModule_WithoutParams",
		"body": [
			"`timescale 1ns/1ps",
			"module $TM_FILENAME_BASE (",
			"input clk_in,",
			"input rst_n_in,",
			"output ,",
			");",
			"//--------------------------------------------------------------------------//",
			"// internal signals",
			"//--------------------------------------------------------------------------//",
			"//--------------------------------------------------------------------------//",
			"// outputs",
			"//--------------------------------------------------------------------------//",
			"endmodule"
		],
		"description": "Submodule Template Without Parameters"
	},
	"Module-1": {
		"prefix": "MyModule_WithParams",
		"body": [
			"`timescale 1ns/1ps",
			"module $TM_FILENAME_BASE ",
			"#(",
			"parameter = ",
			")",
			"(",
			"input clk_in,",
			"input rst_n_in,",
			"output ,",
			");",
			"//--------------------------------------------------------------------------//",
			"// internal signals",
			"//--------------------------------------------------------------------------//",
			"//--------------------------------------------------------------------------//",
			"// outputs",
			"//--------------------------------------------------------------------------//",
			"endmodule"
		],
		"description": "Submodule Template With Parameters"
	},
	"Debug-0": {
		"prefix": "Vivado_Debug",
		"body": [
			"(*mark_debug = \"true\"*)"
		],
		"description": "Vivado Debug Signals Prefix"
	},
	"alwaysblock-0": {
		"prefix": "async_submodules_always",
		"body": [
			"always@(posedge clk_in or negedge rst_n_in )begin",
			"    if (~rst_n_in) begin",
			"    end",
			"end"
		],
		"description": "alwaysblock in submodule"
	},
	"alwaysblock-1": {
		"prefix": "async_topmodules_always",
		"body": [
			"always@(posedge clk or negedge rst_n )begin",
			"    if (~rst_n) begin",
			"    end",
			"end"
		],
		"description": "alwaysblock in topmodule"
	},
	"alwaysblock-2": {
		"prefix": "sync_submodules_always",
		"body": [
			"always@(posedge clk_in)begin",
			"    if (~rst_n_in) begin",
			"    end",
			"end"
		],
		"description": "alwaysblock in submodule"
	},
	"alwaysblock-3": {
		"prefix": "sync_topmodules_always",
		"body": [
			"always@(posedge clk)begin",
			"    if (~rst_n) begin",
			"    end",
			"end"
		],
		"description": "alwaysblock in topmodule"
	},
	"generate_vcd": {
		"prefix": "generate_vcd_file",
		"body": [
			"//***************************************************************************",
			"// VCD File",
			"//***************************************************************************",
			"initial",
			"begin",
			"    \\$dumpfile(\"../../../$TM_FILENAME_BASE.vcd\");",
			"    \\$dumpvars;",
			"end"
		],
		"description": "vcd file in testbench topmodule"
	},
	"clockingblock": {
		"prefix": "clocking",
		"body": [
			"clocking @(posedge clk_in);",
			"endclocking"
		],
		"description": "clocking block in testbench interface",
	},
	"algo_tb": {
		"prefix": "algo_main_tb",
		"body": [
			"`timescale 1ps / 1ps",
			"module $TM_FILENAME_BASE ();",
			"parameter FRAME_VALID = 1;",
			"",
			"string m_axis_tvalid_type_in = \"continuous\";",
			"string mem_loc_in = \"../../../../user_srcs/tb/ .txt\";",
			"",
			"//***************************************************************************",
			"// VCD File",
			"//***************************************************************************",
			"initial begin",
			"\\$dumpfile(\"../../../$TM_FILENAME_BASE.vcd\");",
			"\\$dumpvars;",
			"end",
			"//***************************************************************************",
			"// rst_n",
			"//***************************************************************************",
			"task rst_n();",
			"#(15.2 * nS) rst_n_in = 1;",
			"endtask",
			"",
			"//***************************************************************************",
			"// main test function",
			"//***************************************************************************",
			"initial begin",
			"// reset",
			"rst_n();",
			"fork",
			"// thread - 1",
			"`ifdef CHECKER_EN",
			"error_checker();",
			"`endif",
			"// thread - 2",
			"begin",
			"@(posedge sim_done)",
			"$display(",
			"\"------time:%p $TM_FILENAME_BASE simulation done! ------\", \\$time",
			");",
			"#(1 * uS);",
			"\\$finish();",
			"end",
			"join_any",
			"#(100 * nS);",
			"\\$stop(1);",
			"end",
			"",
			"initial begin",
			"multi_frames();",
			"end",
			"`ifndef CHECKER_EN",
			"initial begin",
			"#(100 * uS) rgb2hsv_en_in = 1'b0;",
			"#(300 * uS) rgb2hsv_en_in = 1'b1;",
			"end",
			"`endif",
			"",
			"initial begin",
			"repeat (FRAME_VALID) begin",
			"@(posedge m_axis_tuser_);",
			"#(5 * uS);",
			"@(posedge clk_in) m_axis_tready_in = 1'b0;",
			"",
			"#(6 * uS);",
			"@(posedge clk_in);",
			"m_axis_tready_in = 1'b1;",
			"end",
			"end",
			"",
			"//***************************************************************************",
			"// error_checker",
			"//***************************************************************************",
			"",
			"task error_checker();",
			"",
			"fork",
			"// data error",
			"begin",
			"@();",
			"\\$error(\"------time:%p ERROR: xxx error! ------\", \\$time);",
			"end",
			"join_any",
			"endtask",
			"//***************************************************************************",
			"// monitor",
			"//***************************************************************************",
			"//***************************************************************************",
			"// check point",
			"//***************************************************************************",
			"//***************************************************************************",
			"// read checkpoint memory data",
			"//***************************************************************************",
			"initial begin",
			"\\$readmemh(\"../../../../user_srcs/tb/ .txt\",,0);",
			"end",
			"",
			"//***************************************************************************",
			"// Instance",
			"//***************************************************************************",
			"axis_gen #(",
			".DATA_WIDTH (DATA_WIDTH),",
			".H_ACTIVE   (H_ACTIVE),",
			".V_ACTIVE   (V_ACTIVE),",
			".H_BLANK    (H_BLANK),",
			".V_BLANK    (V_BLANK),",
			".FRAME_VALID(FRAME_VALID)",
			") u_axis_gen (",
			".clk_in               (clk_in),",
			".rst_n_in             (rst_n_in),",
			".s_axis_tready_in     (),",
			".m_axis_tvalid_type_in(),",
			".mem_loc_in           (mem_loc_in),",
			"",
			".m_axis_tuser_out (),",
			".m_axis_tlast_out (),",
			".m_axis_tvalid_out(),",
			".m_axis_tdata_out ()",
			");",
			"",
			"endmodule",
		],
		"description": "testbench interface sketelon"
	}
	// "do_file": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// "FSM": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}